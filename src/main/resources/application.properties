spring.application.name=auth.client
server.port=8090

# OAuth2 client configuration
spring.security.oauth2.client.registration.vdb-auth-client.client-id=vdb-auth-client
spring.security.oauth2.client.registration.vdb-auth-client.client-secret=vitalia777
spring.security.oauth2.client.registration.vdb-auth-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.vdb-auth-client.scope=openid,profile,read,write
spring.security.oauth2.client.registration.vdb-auth-client.redirect-uri=http://auth-client.localtest.me:8090/login/oauth2/code/vdb-auth-client
spring.security.oauth2.client.registration.vdb-auth-client.client-name=vdb-auth-client
spring.security.oauth2.client.registration.vdb-auth-client.provider=my-provider
# Authorization server endpoints (replace with your auth server's endpoints)
spring.security.oauth2.client.provider.my-provider.authorization-uri=http://auth-server.localtest.me:9000/oauth2/authorize
spring.security.oauth2.client.provider.my-provider.token-uri=http://auth-server.localtest.me:9000/oauth2/token
spring.security.oauth2.client.provider.my-provider.jwk-set-uri=http://auth-server.localtest.me:9000/oauth2/jwks

logging.level.org.springframework.security=TRACE
logging.level.org.springframework.web=TRACE
logging.level.org.springframework.security.oauth2.client=TRACE
logging.level.org.springframework.security.web.session=TRACE
server.servlet.session.timeout=30m
server.servlet.session.persistent=true

server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.domain=localtest.me

# or if you're testing locally with different ports:
